/*Что такое  doctipe и для  чего он используется

Doctype используется для указания типа документа, добавляется  первой строкой  HTM документа, служит для  того что бы браузер мог понять как ему 
интерпретировать страницу.Его задача — указать браузеру, какой стандарт HTML используется в этом документе. Сейчас это везде стандарт HTML5

* Описать базовую структуру  HTM страницы 

в  самомо верху  DOCTYPE , за  ним  

HTML Именно внутри него располагается вся информация. Благодаря этому тегу браузер понимает, 
где начинается контент, который необходимо обработать как HTML.Важной частью тега html является наличие атрибута lang.

head Тег <head></head> служит для хранения служебной информации. Содердит метаинформацию

body тег который содержит всю разметку  HTM документа , все что будет отображаться в браузере


* Что такое симантика.Какие семантичные теги вы знаете?

Семантика  - это использование правиоьных тегов описывающих содержимое контента внутри себя. Семантичный тег - это тег который носит 
смысловое обьяснение.  Если используем текс , то тег <p> если  заголовок то <h>. По тегу должно быть понятно кокой контент внутри 
него используется


* Какая разница между тегами <strong>, <em>, <b>, <i>?

strong и b делают текс жирным 
em и i делают текст курсивным
теги  strong и em определяют важность отмеченого текста в поисковике при чтении на  них будет сделан акцент

* Что такое CSS, для  чего он используется?

CSS Каскадная таблица стилей , предназначеная для добавления различных стилей на HTM страницу


* Варианты добаления CSS стилей на страницу

есть 4 основных способа добавления 

1. С помощью отрибута  style добавляется на конкретный элемент < div style = "bacground-color: red";</div>

2.

3. Использование внешнего файла  <link rel="stylesheet" href="./css/style.css"> все стили добавляютя в отдельный документ с 
  расширением scc

4. импорты  непосредственно в файлы стрилей

* Типы позиционирования SCC

Существуют 5 основных типов позиционирования

Static тип позиционирования по умолчанию.Это значение означает что элемент является не позиционированным, т.е. отображается как обычно (в потоке).

Relative относительное позиционирование  Относительно позиционированный элемент ведёт себя как элемент в потоке за исключением того, 
что его текущее положение можно менять при помощи определённых CSS свойств сместить. К этим CSS свойствам относятся left, top, right и bottom.

Absolute Позиционирование выполняется относительно ближайшего родителя.Если среди предков у элемента с position: absolute нет позиционированного 
элемента, то в этом случае он будет позиционироваться относительно HTML страницы, т.е. элемента body.

Fixed Фиксированное позиционирование похоже на абсолютное, но в отличии от него оно всегда привязывается к краям окна браузера (viewport), 
и остаётся в таком положении даже при скроллинге страницы.
Фиксированное позиционирование применяется для закрепления на странице навигационных меню, кнопки «вверх», панелей с 
социальными кнопками и многого другого.

Sticky в  видимой области экрана элемент ведет себя как Fixed. При дальнейшей прокрутки скролится вместе с родителем


*Блочная модель CSS какое итоговое пространство будет занимать элемент на  стронице (box-sizing border-box)
контект - падинг - бордер - маржин


*Типы данных в JS (8 основных типов)

1.string
2.number
3.bigint
4.boolean
5.object
6.null  если  к null применить typeof получим обьект (это ошибка которая сложилась исторически)
7.undefined
8.symbol


* Разница  между == и === 
==  просто сравнивает значения 
=== строгое  сравнивает и значение равенство типов

* Что такое строгий режим Strict Mode

Режим strict (строгий режим), введённый в ECMAScript 5, позволяет использовать более строгий вариант JavaScript. Это не просто подмножество языка: 
в нем сознательно используется семантика, отличающаяся от обычно принятой.


* Разница  ежду  function declaration И function expression??

function declaration функция, объявленная в основном потоке кода 
 Function Declaration

 function sum(a, b) {
  return a + b;
}

Function Expression – объявление функции в контексте какого-либо выражения, например присваивания.Созданая функция присваивается в  переменную

 Function Expression
var sum = function(a, b) {
  return a + b;
}

*/
// Фунция проверки полиндрома



let polindrom = str => str == str.split('').reverse().join('');

let isPolindrom = polindrom("заказ");

console.log(isPolindrom);


 






























