/*
1. Типы списков в HTML?
    Есть три основных типа списков в  HTML 
    - Маркированный  определяется с помощью тегов <ul> и <li> каждый элемент поечен черным кружочком
    - Нумерованый, определяетям с помощью <ol>  и <li> каждый элемент нумируется 
    - Список определений формируется с помощью тегов <dl> основная обертка
                                                     <dt> определение
                                                     <dd> поясняющий текст
    Списки можно вкладывать друг в друга создавая многоуровневые списки


    2. Как семантически правильно сверстать картинку с подписью?
    Можно воспользоваться двумя тегами <figure> внутрь которого с  помощью тега  <img> помещается изображение и  <figcaption> находится внутри 
    <figure>  и содержит поясняющий текст . !!! Использование данных тегов не отменяет использование атрибута <alt> для данной картинки


3. Разница между margin и padding?
    margin  это внешний отступ (пространство от границы блока до другого элемента)
    padding это внутренний отступ (пространство от границы блока до контента)


4. Разница между display: none и visibility: hidden?
    Оба правила предназначены для скрытия элементов на странице
    - display: none  полностью убирает элеент с  HTML страницы , элемент удаляется из основного потока документов, единственное место где он остается 
    доступен это дом дерево, также контент находяйщийся внутри него становится не доступен для поисковых роботов 
    - visibility: hidden  не  смотря на то что элемент становится не доступен из основного потока элемент не вырывается и по пержнему занимает 
    отведенное для него место, а так же он остается доступен для поисковых роботов

5. Разница между блочным и строчным (инлайновым) элементами?
    Блочный элемент будет занимать всю доступную ширину экрана, строчный элемент подстраивается под размер контента. Блочные идут друг под другом 
    а строчных в одном ряду может быть несколько. Блочным элементам можно задавать разеры т.е. ширину и высоту для строчных это не работает
    Блочные воспринимают внешние и внутренние отступы (margin и padding) Для строчных элементов margin сверху и снизу не работает  


6. Разница между адаптивным (adaptive) и отзывчивым (responsive) дизайнами?
    Адаптивный дизайн это по сути несколько версий одного и тогоже сайта, который загружается пользователю в зависимости от того на каком устройстве
    открыт сайт
    Отзывчивый дизайн предпологает перестройку макета в зависимости от ширины экрана

7. Что такое область видимости (Scope)?
    Область видимости или Scope это место откуда мы имеем доступ к переменным или функциям. Есть три типа областей видимости 1. глобальная доступная
    из любого места в коде 2. локальная  переменные и фунции объявленые внутри функции доступны только внутри функции, за ее пределами при обращении 
    к переменной мы получаем ошибку 3. Блочная - появилась с версией синтаксиса ES6  для переменных объявленых с помощью let и const Такая область 
    видимости находится внутри фигурных скобок , переменные обьявленые через var на такую область не реагируют.Область видимости - это набор правил 
    по которым происходит поиск переменных . Сначала переменная ищется в локальной области видимости если ее нет поиск происходит во внешней 
    области и т д пока не доходит до глобальной


8. Разница между «let», «const» и «var»?
    Переменная обьявленная через var всплывает (hosting) это значит если мы обратимся к переменной до ее инициализации то получим просто undefind
    в случае с let и const мы плучим ошибки.Во вторых у них разная область видимости у let и const область видимости ограничена блоком т.е если они
    объявлены внутри скобок , то доступны только внутри скобок , переменная обьявленная через var такую обасть видимости игнорирует и может быть 
    доступна за ее пределами. let и const  let можем переопределить const - не возможно переопределить при попытки это сделать получим ошибку


9. Что такое функции высшего порядка (Higher Order Functions)?
    Это функции , которые возвращают другие функции или же принимает другую функцию в качесте аргумента. Это такие функции как map forEach reduse 
    filter и т д которые в качестве аргумента принимают функцию и в последующем применяет ее к каждому элеенту массива


10. Что такое DOM?
    DOM ил document object model  обьектная модель докуента которую браузер создает в памяти компьютера на основании HTML кода  полученого им от
    сервера


11. Что такое распространение события (Event Propagation)?
    Это 


12. Что такое делегирование событий (Event Delegation)?


13.  Функция создания инициалов?
    Функция которая на вход будет принимать имя и возвращать инициалы с большой буквы
*/
//let name = "азаров игорь"


function abbr(name){
    return name.toUpperCase()
          .split(" ")
          .map(item => `${item.slice(0, 1)}.`)
          .join("");
}

let n = abbr("азаров игорь")
console.log(n);



let toInitial = (name) => name.split(" ").map(item =>
    `${item.slice(0, 1).toUpperCase()}.`
).join("");

let a = toInitial("азаров игорь")
console.log(a);



let abbrev = name => name.toUpperCase().split(" ").map(item => item[0]).join(".");
let b = abbrev("азаров игорь")
console.log(b);